/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ProtectedImport } from './routes/_protected'
import { Route as ProtectedIndexImport } from './routes/_protected/index'
import { Route as publicResetPasswordRouteImport } from './routes/(public)/reset-password/route'
import { Route as publicRegisterRouteImport } from './routes/(public)/register/route'
import { Route as publicLoginRouteImport } from './routes/(public)/login/route'
import { Route as publicLandingPageRouteImport } from './routes/(public)/landing-page/route'

// Create/Update Routes

const ProtectedRoute = ProtectedImport.update({
  id: '/_protected',
  getParentRoute: () => rootRoute,
} as any)

const ProtectedIndexRoute = ProtectedIndexImport.update({
  path: '/',
  getParentRoute: () => ProtectedRoute,
} as any)

const publicResetPasswordRouteRoute = publicResetPasswordRouteImport.update({
  path: '/reset-password',
  getParentRoute: () => rootRoute,
} as any)

const publicRegisterRouteRoute = publicRegisterRouteImport.update({
  path: '/register',
  getParentRoute: () => rootRoute,
} as any)

const publicLoginRouteRoute = publicLoginRouteImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const publicLandingPageRouteRoute = publicLandingPageRouteImport.update({
  path: '/landing-page',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_protected': {
      preLoaderRoute: typeof ProtectedImport
      parentRoute: typeof rootRoute
    }
    '/(public)/landing-page': {
      preLoaderRoute: typeof publicLandingPageRouteImport
      parentRoute: typeof rootRoute
    }
    '/(public)/login': {
      preLoaderRoute: typeof publicLoginRouteImport
      parentRoute: typeof rootRoute
    }
    '/(public)/register': {
      preLoaderRoute: typeof publicRegisterRouteImport
      parentRoute: typeof rootRoute
    }
    '/(public)/reset-password': {
      preLoaderRoute: typeof publicResetPasswordRouteImport
      parentRoute: typeof rootRoute
    }
    '/_protected/': {
      preLoaderRoute: typeof ProtectedIndexImport
      parentRoute: typeof ProtectedImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  ProtectedRoute.addChildren([ProtectedIndexRoute]),
  publicLandingPageRouteRoute,
  publicLoginRouteRoute,
  publicRegisterRouteRoute,
  publicResetPasswordRouteRoute,
])

/* prettier-ignore-end */
